<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd 
			http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	    
	<!-- hibernate and DBconnection Pool setting -->
	<bean id="sessionFactory_slave01"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="datasource_slave01" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect   
                </prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="jdbc.batch_size">25</prop>
				<prop key="jdbc.fetch_size">50</prop>
				<prop key="hibernate.connection.release_mode">auto</prop>
				<prop key="hibernate.autoReconnect">true</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>				 
			</props>
		</property>
		<property name="entityInterceptor"> 
			<ref bean="XnradminHibernateInterceptor"/> 
		</property> 
		<property name="annotatedClasses">
			<list>	
				<value>com.xnradmin.po.wx.OutPlan</value>													
				<value>com.xnradmin.po.CommonMenu</value>				
				<value>com.xnradmin.po.CommonOrganization</value>	
				<value>com.xnradmin.po.CommonOrganizationType</value>
				<value>com.xnradmin.po.CommonPermission</value>
				<value>com.xnradmin.po.CommonPermissionMenuRelation</value>
				<value>com.xnradmin.po.CommonRole</value>
				<value>com.xnradmin.po.CommonRolePermissionRelation</value>
				<value>com.xnradmin.po.CommonStaff</value>
				<value>com.xnradmin.po.CommonStaffRoleRelation</value>
				<value>com.xnradmin.po.CommonStaffStatus</value>	
				<value>com.xnradmin.po.CommonAttach</value>					
				<value>com.xnradmin.po.CommonContact</value>
				<value>com.xnradmin.po.CommonCustomer</value>
				<value>com.xnradmin.po.CommonCustomerContact</value>				
				<value>com.xnradmin.po.PhoneLocal</value>
				<value>com.xnradmin.po.CommonScript</value>
				<value>com.xnradmin.po.CommonPort</value>
				<value>com.xnradmin.po.common.status.Status</value>
				<value>com.xnradmin.po.message.MessageMsg</value>
				<value>com.xnradmin.po.sms.SmsRecord</value>
				<value>com.xnradmin.po.pay.PayUpmp</value>
				<value>com.xnradmin.po.dishes.Collocation</value>
				<value>com.xnradmin.po.dishes.Dish</value>
				<value>com.xnradmin.po.dishes.RawMaterial</value>
				<value>com.xnradmin.po.dishes.UploadOrder</value>
				<value>com.xnradmin.po.client.ClientUserInfo</value>
				<value>com.xnradmin.po.client.ClientUserRegionInfo</value>
				<value>com.xnradmin.po.wx.WXUser</value>
				<value>com.xnradmin.po.wx.WXAccessToken</value>
				<value>com.xnradmin.po.wx.WXMenu</value>
				<value>com.xnradmin.po.wx.WXMessage</value>
				<value>com.xnradmin.po.wx.WXReactiveMessage</value>
				<value>com.xnradmin.po.wx.WXClientUserMessage</value>
				<value>com.xnradmin.po.wx.WXPayInfo</value>
				<value>com.xnradmin.po.wx.WXQRcode</value>
				<value>com.xnradmin.po.common.Log</value>
				<value>com.xnradmin.po.mall.seting.DeliveryMode</value>
				<value>com.xnradmin.po.mall.seting.LogisticsCompany</value>
				<value>com.xnradmin.po.mall.seting.PayMentMode</value>
				<value>com.xnradmin.po.mall.seting.PrimaryConfiguration</value>
				<value>com.xnradmin.po.mall.seting.Slide</value>
				<value>com.xnradmin.po.mall.commodity.Category</value>
				<value>com.xnradmin.po.mall.commodity.Goods</value>
				<value>com.xnradmin.po.mall.commodity.GoodsDishRelation</value>
				<value>com.xnradmin.po.mall.order.ShoppingCart</value>
				<value>com.xnradmin.po.mall.order.OrderGoodsRelation</value>
				<value>com.xnradmin.po.mall.order.OrderRecord</value>
				<value>com.xnradmin.po.mall.region.Area</value>
				<value>com.xnradmin.po.mall.region.City</value>
				<value>com.xnradmin.po.mall.region.Country</value>
				<value>com.xnradmin.po.mall.region.Province</value>
				<value>com.xnradmin.po.mall.order.Search</value>
				<value>com.xnradmin.po.mall.order.Purchase</value>
				<value>com.xnradmin.po.business.BusinessCategory</value>
				<value>com.xnradmin.po.business.BusinessGoods</value>
				<value>com.xnradmin.po.business.BusinessWeight</value>
				<value>com.xnradmin.po.business.BusinessOrderRecord</value>
				<value>com.xnradmin.po.business.BusinessOrderGoodsRelation</value>
				<value>com.xnradmin.po.business.BusinessData</value>
				<value>com.xnradmin.po.business.BusinessUserFavorite</value>
				<value>com.xnradmin.po.common.quesion.Quesion</value>
				<value>com.xnradmin.po.common.quesion.QuesionLog</value>
				<value>com.xnradmin.po.business.wareHouse.BusinessWareHouse</value>
				<value>com.xnradmin.po.business.wareHouse.BusinessWareHouseInvRel</value>
				<value>com.xnradmin.po.business.wareHouse.BusinessWareHouseOperate</value>
				<value>com.xnradmin.po.wx.connect.FarmerImage</value>	
			</list>
		</property>

	</bean>

	  
   	<!-- 事务 -->
	<bean id="transactionManager_slave01"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory_slave01" />
		<property name="dataSource" ref="datasource_slave01" />
	</bean>


	<!-- 配置事务的传播特性 -->
	<tx:advice id="txAdviceV1" transaction-manager="transactionManager_slave01">
		<tx:attributes>
			<tx:method name="*" read-only="true" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	
	<tx:annotation-driven transaction-manager="transactionManager_slave01"
		proxy-target-class="true" />

	<bean id="transactionInterceptorV1"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager_slave01" />
		<!-- 配置事务属性 -->
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
			
	<!-- 那些类的哪些方法参与事务 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="allServiceMethod" expression="(execution(* com.xnradmin.*.*(..))) OR (execution(* com.xnradmin.test.*.*(..))) OR (execution(* com.xnradmin.test.*.*.*(..)))" />
		<aop:advisor pointcut-ref="allServiceMethod" advice-ref="txAdviceV1" />
	</aop:config>
		
</beans>